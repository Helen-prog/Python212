view.py

templates
	index.html
	blog.html
	

SQLite3


SELECT [ALL | DISTINCT] {*|столбец1[, столбец2]}
FROM таблица_1[, таблица_2]
WHERE условие
	AND или OR
	=, ==, <>, !=, <, <=, >, >=
	выражение [NOT] BETWEEN начальное_значение AND конечное_значение
	выражение [NOT] LIKE шаблон строки
		% - любое количество символов
		_ - один символ
	выражение [NOT] GLOB регулярное выражение
		* 
		?
		.
		[abc]
		[a-z]
		[^abc]
	выражение IS [NOT] NULL
	выражение [NOT] IN (набор_значений)
	EXISTS - осуществляет проверку существования
GROUP BY выражение	
HAVING условие
ORDER BY имя_поля | номер_поля [ASC | DESC]		
LIMIT количество_строк OFFSET смещение | LIMIT [смещение] количество_строк
	


INSERT INTO имя_таблицы [(столбец_1[, столбец_n])]
VALUES (значение_1[, значение_n])
		
	
INSERT INTO имя_таблицы [(встраиваемый_список_столбцов)]
SELECT список стобцов
FROM список_таблиц
WHERE условие


UPDATE имя_таблицы
SET столбец1=выражение_1[, столбец2=выражение_2]
[WHERE условие]


DELETE FROM имя_таблицы
WHERE условие


разработчики логической базы данных
разработчики физической базы данных

Функции агрегирования
SUM  - работает только с числовыми полями
AVG  - работает только с числовыми полями
COUNT
MIN
MAX

Однострочные запросы: =, <, > ,<>, <=, => - возвращает из вложенной команды SELECT только одно строку 

Многострочные запросы: IN (NOT IN) - возвращает более одной строки (список значений) из подзапроса		
	
UNION 


models
	__init__.py
	database.py
	group.py
	lesson.py
	student.py
	
create_database.py
	
	
pip install faker

Jinja

pip install jinja2

{{ }} - выражение для вставки констркции Python в шаблон (переменная)
{%  %} - спецификатор шаблона (for, if, else)
{# #} - блок комментария
# ## - строчный комментарий	

templates
	home.html
	
	header.html
	footer.html
	main.html
	dialogs.html
	
	page.html
	about.html
	
	
pip install flask

flsk
	flsite.py
	FDataBase.py
	
	sq_db.sql	
	templates
		base.html
		index.html
		about.html
		contact.html
		page404.html
		login.html
		add_post.html
		post.html
	static
		css
			style.css
		
	
	
	
http://127.0.0.1:5000/profile/elena


int - должны присуствовать только цифры
float - должны присуствовать только числа с плавающей точкой
path - можно использовать любые допустимые символы URL плюс символ "/"


http://127.0.0.1:5000/contact?username=igor&email=igor%40gmail.com&message=%D0%BF%D1%80%D0%B0%D0%BF%D1%80%D0%B0%D0%BF

http://127.0.0.1:5000/contact


flash() - формирование сообщения пользователю
get_flashed_messages() - обработка сформированных сообщений в шаблоне документа


import os
os.urandom(20).hex()

from flsk.flsite import create_db
create_db()


<img width=100% src="/static/images/1.jpg">





	