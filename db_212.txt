view.py

templates
	index.html
	blog.html
	

SQLite3


SELECT [ALL | DISTINCT] {*|столбец1[, столбец2]}
FROM таблица_1[, таблица_2]
WHERE условие
	AND или OR
	=, ==, <>, !=, <, <=, >, >=
	выражение [NOT] BETWEEN начальное_значение AND конечное_значение
	выражение [NOT] LIKE шаблон строки
		% - любое количество символов
		_ - один символ
	выражение [NOT] GLOB регулярное выражение
		* 
		?
		.
		[abc]
		[a-z]
		[^abc]
	выражение IS [NOT] NULL
	выражение [NOT] IN (набор_значений)
	EXISTS - осуществляет проверку существования
GROUP BY выражение	
HAVING условие
ORDER BY имя_поля | номер_поля [ASC | DESC]		
LIMIT количество_строк OFFSET смещение | LIMIT [смещение] количество_строк
	


INSERT INTO имя_таблицы [(столбец_1[, столбец_n])]
VALUES (значение_1[, значение_n])
		
	
INSERT INTO имя_таблицы [(встраиваемый_список_столбцов)]
SELECT список стобцов
FROM список_таблиц
WHERE условие


UPDATE имя_таблицы
SET столбец1=выражение_1[, столбец2=выражение_2]
[WHERE условие]


DELETE FROM имя_таблицы
WHERE условие


разработчики логической базы данных
разработчики физической базы данных

Функции агрегирования
SUM  - работает только с числовыми полями
AVG  - работает только с числовыми полями
COUNT
MIN
MAX

Однострочные запросы: =, <, > ,<>, <=, => - возвращает из вложенной команды SELECT только одно строку 

Многострочные запросы: IN (NOT IN) - возвращает более одной строки (список значений) из подзапроса		
	
UNION 


models
	__init__.py
	database.py
	group.py
	lesson.py
	student.py
	
create_database.py
	
	
pip install faker

Jinja

pip install jinja2

{{ }} - выражение для вставки констркции Python в шаблон (переменная)
{%  %} - спецификатор шаблона (for, if, else)
{# #} - блок комментария
# ## - строчный комментарий	

templates
	home.html
	
	header.html
	footer.html
	main.html
	dialogs.html
	
	page.html
	about.html
	
	
pip install flask

flsk
	flsite.py
	FDataBase.py
	
	sq_db.sql	
	templates
		base.html
		index.html
		about.html
		contact.html
		page404.html
		login.html
		add_post.html
		post.html
	static
		css
			style.css
		
	
	
	
http://127.0.0.1:5000/profile/elena

Flask
int - должны присуствовать только цифры
float - должны присуствовать только числа с плавающей точкой
path - можно использовать любые допустимые символы URL плюс символ "/"

Django
str - любая не пустая строка, исключая символ "/"
int - любое положительное целое число, включая 0
slug - латиница, символ дефис, подчеркивание
uuid - цифры, малые латинские символы, дефис
path -  любая не пустая строка, включая символ "/"


http://127.0.0.1:5000/contact?username=igor&email=igor%40gmail.com&message=%D0%BF%D1%80%D0%B0%D0%BF%D1%80%D0%B0%D0%BF

http://127.0.0.1:5000/contact


flash() - формирование сообщения пользователю
get_flashed_messages() - обработка сформированных сообщений в шаблоне документа


import os
os.urandom(20).hex()

from flsk.flsite import create_db
create_db()


<img width=100% src="/static/images/1.jpg">


tasks
	static
		css
			style.css
	templates
		index.html
		base.html
	app.py

pip install flask-sqlalchemy


pip install django

Создание нового проекта 
django-admin startproject password_generator_project

python manage.py runserver

python manage.py runserver 4000
python manage.py runserver 1.2.3.4:4000

Создание нового приложения
python manage.py startapp generator


 Создать Django проект, новое приложение
 и вывести одну строку текста в окно браузера
 
static
	css
		style.css
templates
	generator
		home.html
		password.html
		
http://127.0.0.1:8000/?length=2
http://127.0.0.1:8000/?length=3 

python manage.py collectstatic


second


django-admin startproject personal_portfolio

python manage.py startapp skills
python manage.py startapp blog

pip install Pillow

python manage.py makemigrations
python manage.py migrate 

python manage.py createsuperuser
 
http://127.0.0.1:8000/blog/1/


third



django-admin startproject todos
python manage.py startapp todo


models.CASCADE - если пользователь будет удален, то удалятся все его задачи
models.PROTECT - запрещает удалять пользователя, пока у него есть задачи
models.SET_NULL - задачи останутя в базе, даже при удалении пользователя, но значение в поле задачи изменится на NULL
models.SET_DEFAULT -задачи останутя в базе, даже при удалении пользователя, но значение в поле задачи изменится на значение по умолчанию

forms.py

fourth

django-admin startproject devsearch

python manage.py startapp projects
python manage.py startapp users

python manage.py shell

from projects.models import Project

Project.objects.filter(vote_total__gte=37)
Project.objects.exclude(id=1).order_by('title')

quit()

ForeignKey - один ко многим
ManyToManyField - многие ко многим
OneToOneField - один к одному


signals.py

utils.py

pagination.html

http://127.0.0.1:8000/projects/?search_query=web
http://127.0.0.1:8000/projects/?page=2

http://127.0.0.1:8000/projects/?search_query=web
http://127.0.0.1:8000/projects/?search_query=web&page=2

http://127.0.0.1:8000/?search_query=i&page=2

message_form.html

fifth

django-admin startproject programming_blog

python manage.py startapp blog

https://ru.wikipedia.org/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%A1%D0%BF%D0%B5%D1%86%D1%81%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D1%8B
	
https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D1%80%D1%82%D0%B0%D0%BB:%D0%98%D0%B7%D0%B1%D1%80%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D1%81%D0%BE%D0%B4%D0%B5%D1%80%D0%B6%D0%B0%D0%BD%D0%B8%D0%B5

templatetags
	blog_tags.py
	
	
utils.py




 1) Переопределить стили в админ-панели.
 2) Зарегистрироваться на сайте 	     https://www.pythonanywhere.com
 
 
mkvirtualenv --python=/usr/bin/python3.10 blogvenv
mkvirtualenv --python=/usr/bin/python3.9 blogvenv

deactivate  - выход из виртуального окружения
workon blogvenv  - для повторного входа в виртуальное окружение

pip install django
pip install pillow
pip install django-simple-captcha
pip install django-ckeditor

pwd - просмотр пути к папке

/home/HelenKozovyakina/.virtualenvs/blogvenv

python manage.py collectstatic

/home/HelenKozovyakina/blog/static
/home/HelenKozovyakina/blog/media

https://helenkozovyakina.pythonanywhere.com/

sixth
django-admin startproject landing_page

python manage.py startapp cms
python manage.py startapp price
python manage.py startapp crm
python manage.py startapp telebot


@BotFather
Бот обработчик заявок с сайта

bot_test_send_message_bot

6607657163:AAHZJV7MUXnWrNL98jVzy2aeTG-IYCoBvt4

https://api.telegram.org/bot<token>/НАЗВАНИЕ_МЕТОДА

https://api.telegram.org/bot6607657163:AAHZJV7MUXnWrNL98jVzy2aeTG-IYCoBvt4/sendMessage?chat_id=-806029148&text=текст

Центр компьютерной поддержки

@get_id_bot

/my_id@get_id_bot

sendmessage.py

requests



django-admin startproject app
python manage.py startapp exchange
python manage.py startapp weather



eighth
django-admin startproject shop
python manage.py startapp products
python manage.py startapp users


category.html


https://myaccount.google.com/

store_shop_site





